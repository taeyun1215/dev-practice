plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common-config')

    // Built In
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Serverless
    implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.1'

    // Lambda
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.2'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    implementation 'com.amazonaws:aws-java-sdk-rds:1.12.495'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Maria DB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('buildZip', Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    exclude('**/common-config/**')
}

build.dependsOn buildZip
